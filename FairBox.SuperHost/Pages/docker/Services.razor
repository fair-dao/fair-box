@page "/appCenter/docker/services/{HostName}"
@inherits AppCenterBase
@namespace FairBox.SuperHost.Pages
@inject IDialogService DialogService
<FairdaoPage ContentPadding>
    <TitlePanel>
        Docker @Localer["服务列表"] - (@CurAppHost?.Name)
    </TitlePanel>
    <ActionPanel>
        <FluentIcon Value="@(new Icons.Regular.Size24.AddCircle())" Color="Color.Fill" OnClick="CreateService" />
    </ActionPanel>
    <ContentPanel>
        @if (Loaded != true)
        {
            <FluentProgressRing></FluentProgressRing>
        }
        else
        {
            <FluentDataGrid Items="@ServiceList" Virtualize="true" ItemSize="46">
                <TemplateColumn SortBy="@sortByName" Title="服务名" InitialSortDirection="SortDirection.Ascending"  >
                    @(context.Spec.Name)
                </TemplateColumn>
                <TemplateColumn Title="Id" Align="Align.Center">
                    @(context.Id?.Substring(0, 6))
                </TemplateColumn>
                <TemplateColumn Title="镜像" Align="Align.Center">
                    @(context.Spec.Container.Image)
                </TemplateColumn>
                <TemplateColumn Title="端口映射" Align="Align.Center">
                    @(context.Spec.Endpoint)
                </TemplateColumn>
                <TemplateColumn Title="标签" Align="Align.Center">
                    @(context.Spec.Labels)
                </TemplateColumn>

                <TemplateColumn SortBy="@sortByTime" Title="创建时间" Align="Align.End" InitialSortDirection="SortDirection.Descending" IsDefaultSortColumn=true>
                    @(context.Created.ToString("yy-MM-dd HH:mm"))
                </TemplateColumn>
                <TemplateColumn Title="Actions" Align="@Align.End">
                    <FluentButton Title="日志" IconEnd="@(new Icons.Regular.Size20.Info())" OnClick="@(() => NavManager.NavigateTo($"/appCenter/docker/serviceLog/{HostName}/{context.Id}"))" />
                 <FluentButton Title="详情" IconEnd="@(new Icons.Regular.Size20.AppsListDetail())" OnClick="@(() => NavManager.NavigateTo($"/appCenter/docker/serviceDetail/{HostName}/{context.Id}"))" />
                    <FluentButton Title="删除" IconEnd="@(new Icons.Regular.Size16.Delete())" OnClick="@(() => Delete(context))" />
                </TemplateColumn>
            </FluentDataGrid>
        }
    </ContentPanel>
</FairdaoPage>
<FluentDialogProvider />
<FluentToastProvider />
@code {
    IQueryable<shared.Records.DockerService> ServiceList;
    GridSort<shared.Records.DockerService> sortByName = GridSort<shared.Records.DockerService>.ByAscending(p => p.Spec.Name);
    GridSort<shared.Records.DockerService> sortByTime = GridSort<shared.Records.DockerService>.ByAscending(p => p.Created);


    protected override async Task OnInitializedAsync()
    {

        LoadImages();
        base.OnInitializedAsync();
    }

    void LoadImages()
    {
        WraperFromResult < List<shared.Records.DockerService>>($"{CurAppHost.ApiAddress}/Docker/Services", "", HttpMethod.Post, token: CurAppHost.Token, okAction: (data) =>
     {
         ServiceList = data.AsQueryable();
         this.StateHasChanged();
     });
    }

    void Delete(shared.Records.DockerService image)
    {
        WraperFromResult<string>($"{CurAppHost.ApiAddress}/Docker/ServiceRemove/{image.Id}", "", HttpMethod.Post, token: CurAppHost.Token, okAction: (data) =>
     {
         LoadImages();
     });
    }

    async Task CreateService()
    {
        NavManager.NavigateTo($"/appCenter/docker/createService/{HostName}");
    }

}